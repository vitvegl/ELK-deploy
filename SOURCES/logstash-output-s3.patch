--- s3.rb	2015-07-21 01:47:28.000000000 +0300
+++ s3.rb	2015-10-20 15:39:45.960409889 +0300
@@ -64,6 +64,8 @@
 
 # output {
 #    s3{ 
+#      temp_directory				(optional)
+#      s3_tempdir_owner                         (optional)
 #      access_key_id => "crazy_key"             (required)
 #      secret_access_key => "monkey_access_key" (required)
 #      endpoint_region => "eu-west-1"           (required)
@@ -111,6 +113,20 @@
  config_name "s3"
  milestone 1
 
+ # The format to use when writing events to the file. This value
+ # supports any string and can include `%{name}` and other dynamic
+ # strings.
+ #
+ # If this setting is omitted, the full json representation of the
+ # event will be written as a single line.
+ config :message_format, :validate => :string
+
+ # s3_tempdir
+ config :temp_directory, :validate => :string, :default => "/var/lib/logstash/S3_temp/"
+
+ # s3_tempdir_owner
+ config :s3_tempdir_owner, :validate => :string, :default => "logstash"
+
  # Aws access_key.
  config :access_key_id, :validate => :string
  
@@ -157,6 +173,8 @@
   @logger.info("Registering s3 output", :bucket => @bucket, :endpoint_region => @endpoint_region)
 
   AWS.config(
+    :s3_tempdir_owner => @s3_tempdir_owner,
+    :temp_directory => @temp_directory,
     :access_key_id => @access_key_id,
     :secret_access_key => @secret_access_key,
     :s3_endpoint => @endpoint_region
@@ -179,9 +197,7 @@
 
  end
 
- # this method is used for write files on bucket. It accept the file and the name of file.
- def write_on_bucket (file_data, file_basename)
- 
+ def write_on_bucket_without_retry(file_data, file_basename)
   # if you lose connection with s3, bad control implementation.
   if ( @s3 == nil) 
     aws_s3_config
@@ -199,6 +215,20 @@
   @logger.debug "S3: has written "+file_basename+" in bucket "+@bucket + " with canned ACL \"" + @canned_acl + "\""
 
  end
+
+ # this method is used for write files on bucket. It accept the file and the name of file.
+ def write_on_bucket (file_data, file_basename)
+ 
+     begin
+         self.write_on_bucket_without_retry(file_data, file_basename)
+     rescue => ex; ex.message
+         # retry once on any exception
+         @logger.warn("Retry to upload file " + file_basename)
+         sleep(3)
+         self.write_on_bucket_without_retry(file_data, file_basename)
+     end
+ end
+ 
   
  # this method is used for create new path for name the file
  def getFinalPath
@@ -229,7 +259,12 @@
        end
      end
 
-     File.delete (file)
+    begin
+         File.delete (file)
+    rescue => ex
+      ex.message; ex.backtrace
+         @logger.warn("Can't delete file " + file)
+    end
 
    end
  end
@@ -253,8 +288,15 @@
  public
  def register
    require "aws-sdk"
-   @temp_directory = "/opt/logstash/S3_temp/"
-
+=begin
+   require "fileutils"
+    if @temp_directory.empty?
+     @temp_directory = "/var/lib/logstash/S3_temp/"
+    end
+    if @s3_tempdir_owner.empty?
+     @s3_tempdir_owner = "logstash"
+    end
+=end
    if (@tags.size != 0)
        @tag_path = ""
        for i in (0..@tags.size-1)
@@ -263,10 +305,15 @@
    end
 
    if !(File.directory? @temp_directory)
-    @logger.debug "S3: Directory "+@temp_directory+" doesn't exist, let's make it!"
-    Dir.mkdir(@temp_directory)
+    @logger.info "S3: Directory "+@temp_directory+" doesn't exist, let's make it!"
+     unless Process.euid == 0
+       unless Dir.exists?("#{@temp_directory}")
+	Dir.mkdir(@temp_directory)
+#	FileUtils.chown("#{@s3_tempdir_owner}", "#{@s3_tempdir_owner}", "#{@temp_directory}")
+       end
+     end
    else
-    @logger.debug "S3: Directory "+@temp_directory+" exist, nothing to do"
+    @logger.info "S3: Directory "+@temp_directory+" exist, nothing to do"
    end 
    
    if (@restore == true )
@@ -302,7 +349,11 @@
   elsif (@format == "json")
      message = event.to_json
   else
-     message = event.to_s
+    if @message_format
+      message = event.sprintf(@message_format)
+    else
+      message = event.to_s
+    end
   end
   
   if(time_file !=0)
@@ -320,7 +371,7 @@
        # Put the event in the file, now! 
        File.open(@tempFile, 'a') do |file|
          file.puts message
-         file.write "\n"
+         #file.write "\n"
        end
 
      else
@@ -338,7 +389,7 @@
     @logger.debug "S3: put event into "+File.basename(@tempFile)
     File.open(@tempFile, 'a') do |file|
       file.puts message
-      file.write "\n"
+      #file.write "\n"
     end
   end
     

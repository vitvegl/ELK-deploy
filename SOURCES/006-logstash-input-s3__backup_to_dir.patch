--- vendor/bundle/jruby/1.9/gems/logstash-input-s3-2.0.2/lib/logstash/inputs/s3.rb
+++ vendor/bundle/jruby/1.9/gems/logstash-input-s3-2.0.2/lib/logstash/inputs/s3.rb
@@ -51,7 +51,7 @@ class LogStash::Inputs::S3 < LogStash::Inputs::Base
   config :backup_add_prefix, :validate => :string, :default => nil
 
   # Path of a local directory to backup processed files to.
-  config :backup_to_dir, :validate => :string, :default => nil
+  config :backup_to_dir, :validate => :string, :default => "/var/lib/logstash/s3_input_bak"
 
   # Whether to delete processed files from the original bucket.
   config :delete, :validate => :boolean, :default => false
@@ -96,8 +96,18 @@ class LogStash::Inputs::S3 < LogStash::Inputs::Base
       unless @backup_to_dir.nil?
         Dir.mkdir(@backup_to_dir, 0700) unless File.exists?(@backup_to_dir)
       end
+    else
+      unless @backup_to_dir.nil?
+        Dir.mkdir(@backup_to_dir, 0700) unless File.exists?(@backup_to_dir)
+        FileUtils.chown(@temporary_directory_owner, @temporary_directory_owner, @backup_to_dir)
+      end
+    end
 
+    unless Process.euid == 0
+      FileUtils.mkdir_p(@temporary_directory) unless Dir.exist?(@temporary_directory)
+    else
       FileUtils.mkdir_p(@temporary_directory) unless Dir.exist?(@temporary_directory)
+      FileUtils.chown(@temporary_directory_owner, @temporary_directory_owner, @backup_to_dir)
     end
   end # def register
 
